kind: pipeline
name: default

workspace:
  base: /go
  path: src/github.com/keel-hq/keel

steps:
- name: unit-test
  image: golang:1.12.5
  commands:
    - make test

- name: e2e-test
  image: golang:1.12.5
  environment:
    K8S_VERSION: v1.11.3
  commands:
    - echo "Get kind binary..."   
    - curl -Lo kind https://storage.googleapis.com/rimusz-ci-artifacts/kind && chmod +x kind && mv kind /usr/local/bin/
    - echo "Download kubectl..."
    - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/"${K8S_VERSION}"/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
    - echo
    - echo "Create Kubernetes cluster with kind..."
    - kind create cluster --image=kindest/node:"$K8S_VERSION"
    - echo "Export kubeconfig..."
    # shellcheck disable=SC2155
    - export KUBECONFIG="$(kind get kubeconfig-path)"
    - echo
    - echo "Ensure the apiserver is responding..."
    - kubectl cluster-info
    - echo
    - echo "Wait for Kubernetes to be up and ready..."
    - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
    - echo
    - echo "Starting end-to-end tests"
    - make e2e

- name: build
  image: golang:1.12.5
  commands:
    - make install

- name: build-ui
  image: node:9.11.1-alpine
  commands:
    - cd ui
    - yarn
    - yarn run lint --no-fix

- name: publish-image  
  image: plugins/docker
  settings:
    repo: keelhq/keel
    auto_tag: true
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

- name: slack
  image: plugins/slack
  when:
    status: [ success, failure ]
  settings:
    webhook:
      from_secret: slack_url
    channel: general
    username: drone
    icon_url: https://i.pinimg.com/originals/51/29/a4/5129a48ddad9e8408d2757dd10eb836f.jpg